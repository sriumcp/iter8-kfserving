name: Build-test-and-docker-push

on:
  # manual runs
  workflow_dispatch:

  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

jobs:
  local-docker-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2    
    - uses: docker/setup-buildx-action@v1
    - name: Build and push to /tmp
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        tags: iter8-kfserving:latest
        outputs: type=docker,dest=/tmp/image.tar
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: image
        path: /tmp/image.tar

  test-install-yaml:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run Kubernetes tools
      uses: stefanprodan/kube-tools@v1
      with:
        kubectl: 1.18.2
        kustomize: 3.5.5    
    - run: tests/install/testinstallyaml.sh

  test-start-and-finish-handlers:
    runs-on: ubuntu-latest
    needs:
    - local-docker-build
    - test-install-yaml
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: image
          path: /tmp
      - name: Load Docker image
        run: |
          docker load --input /tmp/image.tar
          docker image ls -a
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.0.1
        with:
          minikube version: 'v1.15.1'
          kubernetes version: 'v1.17.11'
      - name: Run Kubernetes tools
        uses: stefanprodan/kube-tools@v1
        with:
          kubectl: 1.18.2
          kustomize: 3.5.5     
      - run: tests/integration/teststarthandler.sh
      - run: tests/integration/teststarthandler.sh
      - run: tests/integration/cleanupstart.sh
      - run: tests/integration/testfinishhandler.sh
      - run: tests/integration/cleanupfinish.sh

  test-install:
    runs-on: ubuntu-latest
    needs:
    - local-docker-build
    - test-install-yaml

    steps:
      - uses: actions/checkout@v2
      - name: Run Kubernetes tools
        uses: stefanprodan/kube-tools@v1
        with:
          kubectl: 1.18.2
          kustomize: 3.5.5    
      - run: tests/install/checkinstallyaml.sh
      - name: Inspect
        run: docker buildx imagetools inspect localhost:5000/iter8/iter8-kfserving:latest
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.0.1
        with:
          minikube version: 'v1.15.1'
          kubernetes version: 'v1.17.11'
      - run: tests/install/checkinstalleverything.sh 

  build-and-push:
    # Ensure test job passes before pushing image.
    needs: 
    - test-start-and-finish-handlers
    - test-install

    runs-on: ubuntu-latest

    if: github.event_name == 'push'

    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-buildx-action@v1
    - uses: docker/login-action@v1
      with:
        # registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_SECRET }}
    - name: Get version
      run: |
        tarref=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tagref
        if [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
          echo "VERSION=$(echo $tarref | sed -e 's/^v//')" >> $GITHUB_ENV
        elif [[ "${{ github.ref }}" == *"main" ]]; then
          echo "VERSION=latest" >> $GITHUB_ENV
        fi
    - name: Get owner and repo
      run: |
        ownerrepo=${{ github.repository }}
        owner=$(echo $ownerrepo | cut -f1 -d/)
        if [[ "$owner" == "iter8-tools" ]]; then
          owner=iter8
        fi
        echo "OWNER=$owner" >> $GITHUB_ENV
        echo "REPO=$(echo $ownerrepo | cut -f2 -d/)" >> $GITHUB_ENV
    - uses: docker/build-push-action@v2
      with:
        context: .
        tags: ${{ env.OWNER }}/${{ env.REPO }}:${{ env.VERSION }}
        push: true
