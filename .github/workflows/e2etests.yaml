name: Build and test. Push to DockerHub with :latest tag if needed.

on:
  push:
    branches:
    - main # Publish `main` as Docker `latest` image.
  pull_request: # Run tests for any PRs.

jobs:
  # Build a local Docker image.
  local-docker-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2    
    - uses: docker/setup-buildx-action@v1
    - name: Get owner and repo
      run: |
        ownerrepo=${{ github.repository }}
        owner=$(echo $ownerrepo | cut -f1 -d/)
        if [[ "$owner" == "iter8-tools" ]]; then
          owner=iter8
        fi
        echo "OWNER=$owner" >> $GITHUB_ENV
        echo "REPO=$(echo $ownerrepo | cut -f2 -d/)" >> $GITHUB_ENV
    - name: Build and push to /tmp
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        tags: ${{ env.REPO }}:latest
        outputs: type=docker,dest=/tmp/image.tar
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: image
        path: /tmp/image.tar

  # Test handlers.
  test-start-and-finish-handlers:
    runs-on: ubuntu-latest
    needs:
    - local-docker-build
    steps:
      - uses: actions/checkout@v2
      - uses: stefanprodan/kube-tools@v1
        with:
          kubectl: 1.18.2
          kustomize: 3.5.5     
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: image
          path: /tmp
      - name: Load Docker image
        run: |
          docker load --input /tmp/image.tar
          docker image ls -a
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.0.1
        with:
          minikube version: 'v1.15.1'
          kubernetes version: 'v1.17.11'
      - name: Get owner and repo
        run: |
          ownerrepo=${{ github.repository }}
          owner=$(echo $ownerrepo | cut -f1 -d/)
          if [[ "$owner" == "iter8-tools" ]]; then
            owner=iter8
          fi
          echo "OWNER=$owner" >> $GITHUB_ENV
          echo "REPO=$(echo $ownerrepo | cut -f2 -d/)" >> $GITHUB_ENV
      - name: Test start handler
        run: |
          export IMAGE_NAME=${{ env.REPO }}:latest; \
          tests/integration/teststarthandler.sh;
      - run: tests/integration/cleanupstart.sh
      - name: Test finish handler
        run: |
          export IMAGE_NAME=${{ env.REPO }}:latest; \
          tests/integration/testfinishhandler.sh
      - run: tests/integration/cleanupfinish.sh

  # Note: The following jobs do not use the previously built local build.
  # Build and push :latest image.
  build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-buildx-action@v1
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_SECRET }}
    - name: Get owner and repo
      run: |
        ownerrepo=${{ github.repository }}
        owner=$(echo $ownerrepo | cut -f1 -d/)
        if [[ "$owner" == "iter8-tools" ]]; then
          owner=iter8
        fi
        echo "OWNER=$owner" >> $GITHUB_ENV
        echo "REPO=$(echo $ownerrepo | cut -f2 -d/)" >> $GITHUB_ENV
    - uses: docker/build-push-action@v2
      with:
        context: .
        tags: ${{ env.OWNER }}/${{ env.REPO }}:latest
        push: true

  # Note: The following jobs do not use the local build.
  # Test installation. 
  test-install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Kubernetes tools
        uses: stefanprodan/kube-tools@v1
        with:
          kubectl: 1.18.2
          kustomize: 3.5.5    
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.0.1
        with:
          minikube version: 'v1.15.1'
          kubernetes version: 'v1.17.11'
      - run: kustomize build install | kubectl apply -f -

  # Test quickstart.
  test-quickstart:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Kubernetes tools
        uses: stefanprodan/kube-tools@v1
        with:
          kubectl: 1.18.2
          kustomize: 3.5.5    
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.0.1
        with:
          minikube version: 'v1.15.1'
          kubernetes version: 'v1.17.11'
          start args: --cpus 2 --memory 5500
      - name: Install KFServing
        run: |
          git clone --branch v0.4.1 https://github.com/kubeflow/kfserving.git
          cd kfserving
          eval ./hack/quick_install.sh
      - name: Install KNative-Monitoring
        run: |
          kubectl create ns knative-monitoring
          kubectl apply -f https://github.com/knative/serving/releases/download/v0.18.0/monitoring-metrics-prometheus.yaml
      - name: Install iter8-kfserving
        run: |
          kustomize build github.com/iter8-tools/iter8-kfserving/install?ref=main | kubectl apply -f -
          kubectl wait --for condition=established --timeout=120s crd/metrics.iter8.tools
          kustomize build github.com/iter8-tools/iter8-kfserving/install/metrics?ref=main | kubectl apply -f -
      - name: Verify all pods are running
        run: |
          kubectl wait --for condition=ready --timeout=300s pods --all -n kfserving-system
          kubectl wait --for condition=ready --timeout=300s pods --all -n knative-monitoring
          kubectl wait --for condition=ready --timeout=300s pods --all -n iter8-system        